fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
# baseline
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=rnaseq$counts, groups=rnaseq$samples$group)
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=("cyan", "green", "purple"))
# baseline
counts = rnaseq$counts
groups = rnaseq$samples$group
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "green", "purple"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "yellow", "purple"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
rownames(fit$coef)
library(GlimmaV2)
# baseline
counts = rnaseq$counts
groups = rnaseq$samples$group
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=1:rnow(rnaseq), y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=1:nrow(rnaseq), y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
### DGEList TEST ###
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
library(GlimmaV2, quietly=TRUE)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
is.numeric(groups)
is.numeric(groups$genotype)
is.numeric(groups$lane)
is.numeric(groups$miscCont)
is.numeric(groups$miscDisc)
is.numeric(groups$libsize)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
sapply(groups, is.numeric)
# add lane
groups <- matrix(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add lane
groups <- matrix(rnaseq$samples$group,
as.character(c(rep(4,5),3,3)),
c(rep(4000,5),300,250),
c("blue","red",rep("green",5)))
# add lane
groups <- matrix(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
max(rnaseq$counts)
min(rnaseq$counts)
max(rnaseq$counts)
max(rnaseq$counts)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
### DGEList TEST ###
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
library(GlimmaV2, quietly=TRUE)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
sapply(groups, is.numeric)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=1200)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=5600)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=600)
data.frame(group=1)
data.frame(group=1)
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
groups <- data.frame(group=1)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
rnaseq <- lymphomaRNAseq
)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
groups
status <- 0
table <- cbind(rnaseq$genes, status=as.vector(status))
table
table
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
?glimmaMA
?glimmaXY
library(GlimmaV2)
library(GlimmaV2)
?glimmaMA
?glimmaMA
glimmaMDS(rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
rnaseq$samples$group
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
library(GlimmaV2)
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
setwd("D:/Windows/ProgrammingOffline/WEHIData/pooledScreens")
getwd()
library(knitr)
knit("pooledScreenAnalysis.rnw")
knit("D:/Windows/WEHI/pooledScreenAnalysis/pooledScreenAnalysis.rnw")
pscreens = "D:/Windows/WEHI/pooledScreenAnalysis/pooledScreenAnalysis.rnw"
Sweave2knitr(pscreens)
pscreensknit = "D:/Windows/WEHI/pooledScreenAnalysis/pooledScreenAnalysis-knitr.rnw"
knit(pscreensknit)
remove.packages("Glimma")
library()
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
install.packages("DESeq2")
BiocManager::install("DESeq2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
data(lymphomaRNAseq)
library(limma)
data(lymphomaRNAseq)
library(edgeR)
data(lymphomaRNAseq)
BiocManager::install("Glimma")
data(lymphomaRNAseq)
library(Glimma)
data(lymphomaRNAseq)
library.dynam.unload("Glimma")
rna <- lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rna <- rna[rowSums(cpm(rna)>1)>=3,]
rna <- clacNormFactors(rna)
calcNormFactors((rna))
rna <- calcNormFactors(rna)
?GlimmaV2::glimmaMDS
groups <- rna$samples$group
Glimmav2::glimmaMDS(rna,groups=groups, continuous.color=TRUE, html="MDS_plot.html")
GlimmaV2::glimmaMDS(rna,groups=groups, continuous.color=TRUE, html="MDS_plot.html")
Glimmav2::glimmaMDS(rna,groups=groups, html="MDS_plot.html")
GlimmaV2::glimmaMDS(rna,groups=groups, html="MDS_plot.html")
GlimmaV2::glimmaMDS(rna,groups=groups)
typeof(rna)
GlimmaV2::glimmaMDS(rna,groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
source('D:/Windows/WEHI/Glimma/glimmav2testing/glimmatest.R')
data(Glimma::lymphomaRNAseq)
Glimma::lymphomaRNAseq
data(Glimma::lymphomaRNAseq)
lymphomaRNAseq
library(devtools)
install.packages("devtools")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq
rnaseq$samples$group
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
GlimmaV2glimmaMDS(rnaseq, groups=groups)
glimmaMDS(rnaseq, groups=groups)
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
glimmaMDS(rnaseq, groups=groups)
)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
?glimmmaMDS
?glimmaMDS
glimmaMDS(rnaseq, groups=groups)
getwd()
?Glimmav@
2
?GlimmaV2
browseVignettes("GlimmaV2")
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
getwd()
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
source('D:/Windows/WEHI/Glimma/glimmav2testing/glimmatest.R')
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
rnaseq <- Glimma::lymphomaRNAseq
rnaseq <- rnaseq[rowSums(cpm(rnaseq)>1)>=3, ]
rnaseq <- calcNormFactors(rnaseq)
groups <- rnaseq$samples$group
glimmaMDS(rnaseq, groups=groups)
