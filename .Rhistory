library(DESeq2)
BiocManager::install("tibble")
library(DESeq2)
BiocManager::install("stringi")
library(DESeq2)
BiocManager::install("XML")
library(DESeq2)
library(Glimma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
rnaseq.deseq2 <- DESeqDataSetFromMatrix(rnaseq$counts, colData=rnaseq$samples, design=~group)
mcols(rnaseq.deseq2) <- DataFrame(mcols(rnaseq.deseq2), rnaseq$genes)
rnaseq.deseq2 <- DESeq(rnaseq.deseq2)
class(rnaseq.deseq2)
rnaseq.deseq2 <- DESeqDataSetFromMatrix(rnaseq$counts, colData=rnaseq$samples, design=~group)
class(rnaseq.deseq2)
rnaseq.deseq2 <- DESeqDataSetFromMatrix(rnaseq$counts, colData=rnaseq$samples, design=~group)
rnaseq.deseq2
rnaseq.deseq2$sampleID
rnaseq.deseq2$group
rnaseq.deseq2$norm.factors
glimmaMDS(rnaseq.deseq2)
library(GlimmaV2)
glimmaMDS(rnaseq.deseq2)
S4Vectors::as.data.frame.DataTable(SummarizedExperiment::colData(rnaseq.deseq2))
glimmaMDS(rnaseq.deseq2)
library(GlimmaV2)
library(DESeq2)
library(Glimma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
rnaseq.deseq2 <- DESeqDataSetFromMatrix(rnaseq$counts, colData=rnaseq$samples, design=~group)
glimmaMDS(rnaseq.deseq2)
glimmaMDS(rnaseq.deseq2)
library(GlimmaV2)
glimmaMDS(rnaseq.deseq2)
glimmaMDS(rnaseq.deseq2)
SummarizedExperiment::colData(x)
SummarizedExperiment::colData(rnaseq.deseq2)
rownames(SummarizedExperiment::colData(rnaseq.deseq2))
library(GlimmaV2)
glimmaMDS(rnaseq.deseq2)
library(GlimmaV2)
glimmaMDS(rnaseq.deseq2)
library(GlimmaV2)
glimmaMDS(rnaseq.deseq2)
glimmaMDS(rnaseq.deseq2)
rnaseq.deseq2 <- DESeqDataSetFromMatrix(rnaseq$counts, colData=rnaseq$samples, design=~group)
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
groups
glimmaMDS(rnaseq.deseq2, groups=groups)
as.character(rep(1, 5))
# need old Glimma for this dataset
library(Glimma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
groups
as.character(seq_len(5))
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# 7 samples
# each instance is a gene
# attribute is number of counts per sample
# data.frame(rnaseq$counts)
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dt <- decideTests(fit)
summary(dt)
# log cpm is the attribute here
# averaged across all arrays in the original linear model fit
# each instance is a gene;
# the col vector names are the geneIDs
# the col vector attribute is mean expression
# data.frame(fit$Amean)
# for now assume fit object
# this is where info for the MD scatter plot comes from!
# data.frame(vm$E)
# fit$design
fit$design
fit$design
glMDPlot(fit, status=dt, counts=vm, groups=groups, side.main="Symbols")
counts
vm
vm$E
data.frame(vm$E)
class(fit)
glimmaMDS(rnaseq, groups=groups)
library(GlimmaV2)
glimmaMDS(rnaseq, groups=groups)
glimmaMA(fit, colour=dt)
glimmaMDS(rnaseq, groups=groups)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
read.delim(files[1], nrow=5)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
library(edgeR)
library(edgeR)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
x
samplenames
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
samplenames
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
library(Mus.musculus)
x
head(genes)
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
head(genes)
x
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples[,c(2,5)])
glimmaMDS(x, labels=paste(group, lane, sep="_"),
groups=x$samples[,c(2,5)])
x$samples
x$samples[,c(2,5)]
x$samples[,c(2,6)]
x$samples[,c(2,5)]
x$samples
x$samples[,2:5]
glimmaMDS(x, labels=paste(group, lane, sep="_"),
groups=x$samples)
x$samples
library(GlimmaV2)
library(GlimmaV2)
lcpm <- cpm(x, log=TRUE)
glimmaMDS(x, labels=paste(group, lane, sep="_"),
groups=x$samples)
x$samples
glimmaMDS(rnaseq, groups=groups)
as.character(rep(1, 5))
# need old Glimma for this dataset
library(Glimma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
groups
glimmaMDS(rnaseq, groups=groups)
groups
colnames(x$samples)[3]
colnames(x$samples)[3] <- "libsize"
colnames(x$samples)
colnames(x$samples)
colnames(x$samples)[4] <- "norm_factors"
colnames(x$samples)
lcpm <- cpm(x, log=TRUE)
x
lcpm <- cpm(x, log=TRUE)
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
colnames(x$samples
colnames(x$samples)
colnames(x$sample)
names(x$sample)
names(x$sample) <- c("files", "group", "lib_size", "norm_factors", "lane")
lcpm <- cpm(x, log=TRUE)
glimmaMDS(x, labels=paste(group, lane, sep="_"),
groups=x$samples)
names(x$sample) <- c("files", "group", "lib_size", "norm_factors", "lane")
x$samples
colnames(x$sample) <- c("files", "group", "lib_size", "norm_factors", "lane")
lcpm <- cpm(x, log=TRUE)
glimmaMDS(x, labels=paste(group, lane, sep="_"),
groups=x$samples)
x$samples
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
x$samples
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
lcpm <- cpm(x, log=TRUE)
x$sample
x$samples
x$sample
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
lcpm <- cpm(x, log=TRUE)
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
lcpm <- cpm(x, log=TRUE)
samples
lcpm <- cpm(x, log=TRUE)
x$samples
lcpm <- cpm(x, log=TRUE)
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors")
x$samples
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples, continuous.colour=TRUE)
glimmaMDS(lcpm[,1], labels=paste(group, lane, sep="_"),
groups=x$samples, continuous.colour=TRUE)
library(GlimmaV2)
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
lcpm <- cpm(x, log=TRUE)
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors")
x$samples
glimmaMDS(lcpm[,1:2], labels=paste(group, lane, sep="_"),
groups=x$samples, continuous.colour=TRUE)
glimmaMDS(lcpm[,1:3], labels=paste(group, lane, sep="_"),
groups=x$samples, continuous.colour=TRUE)
glimmaMDS(lcpm[,1:3], labels=paste(group, lane, sep="_")[,1:3],
groups=x$samples[,1:3], continuous.colour=TRUE)
glimmaMDS(lcpm[,1:3], labels=paste(group, lane, sep="_")[1:3],
groups=x$samples[,1:3], continuous.colour=TRUE)
groups
x$samples
x$samples[1:3,]
paste(group, lane, sep="_")[1:3]
lcpm[,1:3]
glimmaMDS(lcpm[,1:3], labels=paste(group, lane, sep="_")[1:3],
groups=x$samples[1:3,], continuous.colour=TRUE)
library(GlimmaV2)
glimmaMDS(lcpm[,1:3], labels=paste(group, lane, sep="_")[1:3],
groups=x$samples[1:3,], continuous.colour=TRUE)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples, continuous.colour=TRUE)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
lcpm <- cpm(x, log=TRUE)
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
x$samples
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
x$samples
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
library(GlimmaV2)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
colnames(x$samples) <- c("files", "group", "lib_size", "norm_factors", "lane")
x$samples
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
cpm <- cpm(x)
gsub(".", "_", "lib.size")
gsub(".", "", "lib.size")
gsub("lib", "bib", "lib.size")
gsub(".", "bib", "lib.size")
gsub("\.", "_", "lib.size")
gsub(".", "_", "lib.size")
gsub("\\.", "_", "lib.size")
gsub("\\.", "_", colnames(x$samples))
library(GlimmaV2)
library(edgeR)
library(Mus.musculus)
files <- c("GSM1545535_10_6_5_11.txt", "GSM1545536_9_6_5_11.txt",
"GSM1545538_purep53.txt", "GSM1545539_JMS8-2.txt",
"GSM1545540_JMS8-3.txt", "GSM1545541_JMS8-4.txt",
"GSM1545542_JMS8-5.txt", "GSM1545544_JMS9-P7c.txt",
"GSM1545545_JMS9-P8c.txt")
x <- readDGE(files, columns=c(1,3))
class(x)
dim(x)
samplenames <- substring(colnames(x), 12, nchar(colnames(x)))
colnames(x) <- samplenames
group <- as.factor(c("LP", "ML", "Basal", "Basal", "ML", "LP",
"Basal", "ML", "LP"))
x$samples$group <- group
lane <- as.factor(rep(c("L004","L006","L008"), c(3,4,2)))
x$samples$lane <- lane
x$samples
geneid <- rownames(x)
genes <- select(Mus.musculus, keys=geneid, columns=c("SYMBOL", "TXCHROM"),
keytype="ENTREZID")
genes <- genes[!duplicated(genes$ENTREZID),]
x$genes <- genes
x
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
L <- mean(x$samples$lib.size) * 1e-6
M <- median(x$samples$lib.size) * 1e-6
summary(lcpm)
x$samples
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
library(GlimmaV2)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
lcpm <- cpm(x, log=TRUE)
# transformations from raw scale
cpm <- cpm(x)
lcpm <- cpm(x, log=TRUE)
summary(lcpm)
# remove lowly expressed genes
table(rowSums(x$counts==0)==9)
# remove lowly expressed genes
keep.exprs <- filterByExpr(x, group=group)
x <- x[keep.exprs,, keep.lib.sizes=FALSE]
dim(x)
# normalising gene expression distributions
x <- calcNormFactors(x, method = "TMM")
x$samples$norm.factors
x$sa'
x$samples
x$samples
x
x$samples
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glMDSPlot(lcpm)
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
library(GlimmaV2)
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glMDSPlot(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
glimmaMDS(lcpm, labels=paste(group, lane, sep="_"),
groups=x$samples)
