data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
glimmaMA(fit, counts=counts, groups=groups, width=1000)
# MArrayLM plot
counts <- data.frame(rnaseq$counts)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups, width=1000)
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
glimmaXY(x=fit$lods,y=fit$p.value, counts=counts, groups=groups)
glimmaXY(x=fit$p.value,y=fit$lods, counts=counts, groups=groups)
glimmaXY(x=fit$p.value,y=fit$coefficients[,1], counts=counts, groups=groups)
glimmaXY(x=fit$coefficients[,1],y=fit$p.value, counts=counts, groups=groups)
glimmaXY(x=fit$coefficients[,3],y=fit$p.value, counts=counts, groups=groups)
glimmaXY(x=fit$coefficients[,2],y=fit$p.value, counts=counts, groups=groups)
glimmaXY(x=fit$coefficients[,1],y=fit$p.value, counts=counts, groups=groups)
glimmaXY(x=fit$coefficients[,1],y=fit$p.value, status=dtFit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups, width=)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups, width=400)
glimmaMA(fit, counts=counts, groups=groups, height=500)
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups, height=700)
glimmaMA(fit, counts=counts, groups=groups, height=800)
glimmaMA(fit, counts=counts, groups=groups, width=800, height=800)
glimmaMA(fit, counts=counts, groups=groups, width=700, height=700)
library(GlimmaV2)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups, width=700, height=700)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups, width=700, height=700)
glimmaMA(fit, counts=counts, groups=groups, width=700, height=700)
glimmaMA(fit, counts=counts, groups=groups, width=700, height=700)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=600)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=800)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=800)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups, width=900, height=800)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=900)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=600)
library(GlimmaV2)
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=900)
glimmaMA(fit, counts=counts, groups=groups, width=850, height=850)
glimmaMA(fit, counts=counts, groups=groups, width=870, height=870)
glimmaMA(fit, counts=counts, groups=groups, width=860, height=860)
glimmaMA(fit, counts=counts, groups=groups, width=900, height=860)
glimmaMA(fit, counts=counts, groups=groups, width=910, height=860)
glimmaMA(fit, counts=counts, groups=groups, width=860, height=860)
library(GlimmaV2)
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups)
library(GlimmaV2)
glimmaMA(fit, counts=counts, groups=groups)
glimmaMA(fit, counts=counts, groups=groups, status.colours=c("deepblue","darkgrey","pink"))
glimmaMA(fit, counts=counts, groups=groups, status.colours=c("teal","darkgrey","orange"))
glimmaMA(fit, counts=counts, groups=groups, status.colours=c("aqua","darkgrey","hotpink"))
# MArrayLM plot
counts <- rnaseq$counts
groups <- rnaseq$samples$group
glimmaMA(fit, counts=counts, groups=groups, status.colours=c("#3977db","#3d3f42","#db0d4e"))
glimmaMA(fit, counts=counts, groups=groups, status.colours=c("rgb(219,13,78)","#3d3f42","#db0d4e"))
### TEST: glimmav1 dataset ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- rnaseq$samples$group
# fit
design <- model.matrix(~0+groups)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
# baseline
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=rnaseq$counts, groups=rnaseq$samples$group)
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=("cyan", "green", "purple"))
# baseline
counts = rnaseq$counts
groups = rnaseq$samples$group
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "green", "purple"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "yellow", "purple"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, counts=counts, groups=groups, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
rownames(fit$coef)
library(GlimmaV2)
# baseline
counts = rnaseq$counts
groups = rnaseq$samples$group
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=1:rnow(rnaseq), y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=1:nrow(rnaseq), y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
glimmaXY(x=fit$coef, y=fit$lod, status=dtFit, status.colours=c("cyan", "grey", "hotpink"))
### DGEList TEST ###
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
library(GlimmaV2, quietly=TRUE)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
is.numeric(groups)
is.numeric(groups$genotype)
is.numeric(groups$lane)
is.numeric(groups$miscCont)
is.numeric(groups$miscDisc)
is.numeric(groups$libsize)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
sapply(groups, is.numeric)
# add lane
groups <- matrix(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add lane
groups <- matrix(rnaseq$samples$group,
as.character(c(rep(4,5),3,3)),
c(rep(4000,5),300,250),
c("blue","red",rep("green",5)))
# add lane
groups <- matrix(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
max(rnaseq$counts)
min(rnaseq$counts)
max(rnaseq$counts)
max(rnaseq$counts)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
library(GlimmaV2)
# general plot
glimmaMA(fit, counts=rnaseq$counts, groups=rnaseq$samples$group)
### DGEList TEST ###
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
library(GlimmaV2, quietly=TRUE)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= (c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE)
sapply(groups, is.numeric)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=1200)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=5600)
glimmaMDS(rnaseq, groups=groups, continuous.colour=TRUE, width=1200, height=600)
data.frame(group=1)
data.frame(group=1)
# need old Glimma for this dataset
library(Glimma, quietly=TRUE)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
groups <- data.frame(group=1)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
rnaseq <- lymphomaRNAseq
)
groups <- cbind(groups, sample=colnames(rnaseq$counts))
groups
status <- 0
table <- cbind(rnaseq$genes, status=as.vector(status))
table
table
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
?glimmaMA
?glimmaXY
library(GlimmaV2)
library(GlimmaV2)
?glimmaMA
?glimmaMA
glimmaMDS(rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
rnaseq$samples$group
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
library(GlimmaV2)
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
library(GlimmaV2)
# general plot
glimmaMA(fit, dge=rnaseq)
# general plot
glimmaMA(fit, dge=rnaseq)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
class(fit)
