library(GlimmaV2)
?glimmaMDS
?glimmaMA
?glimmaMDS
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)rnaseq <- lymphomaRNAseq
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)rnaseq <- lymphomaRNAseq
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
# MDS plot
glimmaMA(fit, dge=rnaseq)
glimmaMA(fit, dge=rnaseq, save=TRUE)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
x <- glimmaMA(fit, dge=rnaseq, save=TRUE)
class(x)
glimmaMA(fit, dge=rnaseq, save=TRUE)
library(GlimmaV2)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
# MDS plot
glimmaMA(fit, dge=rnaseq, save=TRUE)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
# MDS plot
glimmaMA(fit, dge=rnaseq, save=TRUE)
x <- glimmaMA(fit, dge=rnaseq, save=TRUE, filename="zinga.html")
class(x)
x
x <- glimmaMA(fit, dge=rnaseq)
class(x)
x
x <- glimmaVolcano(fit, dge=rnaseq, save=TRUE)
vignettes(GlimmaV2)
vignette(GlimmaV2)
library(GlimmaV2)
vignette(GlimmaV2)
vignette("GlimmaV2")
vignette(package=GlimmaV2)
?glimmaMA
?glimmaMDS
?glMDPlot
library(Glimma)
?glMDPlot
library(Glimma)
?glMDPlot
?glimmaMDS
vignette(package=GlimmaV2)
?glimmaMDS
?glMDPlot
?glimmaMDS
?glimmaMA
?glimmaMDS
?glimmaMA
?glimmaXY
?glimmaMA
vignette(GlimmaV2)
vignette(GlimmaV2)
library(GlimmaV2)
library(GlimmaV2)
library(GlimmaV2)
?glimmaMA
library(GlimmaV2)
?glimmaMA
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(miscCont=c(rep(4000,5),300,250))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
x <- glimmaMA(rnaseq, groups=groups)
library(GlimmaV2)
?glimmaMA
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
data(lymphomaRNAseq)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(miscCont=c(rep(4000,5),300,250))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
x <- glimmaMA(rnaseq, groups=groups)
glimmaMA(rnaseq, groups=groups)
glimmaMA(rnaseq, groups=groups)
library(Glimma)
glimmaMA(rnaseq, groups=groups)
glimmaMA(fit, dge=rnaseq)
glimmaMDS(rnaseq, groups=groups)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
x <- glimmaMA(fit, dge=rnaseq)
x
x
glimmaMA(fit, dge=rnaseq)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
# MDS plot
glimmaMA(fit, dge=rnaseq)
# MDS plot
glimmaMA(fit, dge=rnaseq)
### TEST: glimmav1 dataset (MArrayLM) ###
library(Glimma)
library(limma)
library(GlimmaV2)
rnaseq <- lymphomaRNAseq
# add lane
groups <- data.frame(genotype=rnaseq$samples$group,
lane= as.character(c(rep(4,5),3,3)),
miscCont=c(rep(4000,5),300,250),
miscDisc=c("blue","red",rep("green",5)))
# add libsize
groups <- cbind(groups, libsize=rnaseq$samples$lib.size)
# fit
design <- model.matrix(~0+rnaseq$samples$group)
contrasts <- cbind(Smchd1null.vs.WT=c(-1,1))
# convert raw counts to logCPM values by automatically extracting libsizes and normalisation factors from x
vm <- voomWithQualityWeights(rnaseq, design=design)
fit <- lmFit(vm, design=design)
fit <- contrasts.fit(fit, contrasts)
fit <- eBayes(fit)
dtFit <- decideTests(fit)
fit$genes$symbol <- fit$genes$Symbols
fit$genes$Symbols <- NULL
# MDS plot
glimmaMA(fit, dge=rnaseq)
glimmaMA(fit, dge=rnaseq)
# MDS plot
glimmaMA(fit, dge=rnaseq)
?glimmaMA
?glimmaVolcano
