setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
glimmaMDS(dds, html="tester.html")
dds <- DESeq(dds, quiet=TRUE)
glimmaMA(dds, html="testerMA.html")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
glimmaMDS(dds, html="tester.html")
dds <- DESeq(dds, quiet=TRUE)
glimmaMA(dds, html="testerMA.html")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
glimmaMA(efit, dge=dge)
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
glimmaMA(efit, dge=dge)
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
glimmaMA(efit, dge=dge, html="testerMA2.html")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
typeof(efit)
class(efit)
g = dge$samples$group
g
factor(g)
levels(g)
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
glimmaMA(efit, dge=dge[1:100,])
efit
dge$samples$group
buildXYData
#' XY Data Object Builder
#'
#' Common processing steps for both MA, XY and volcano plots.
#' Expects a dataframe, \code{table}, which contains two columns labelled \code{xlab} and \code{ylab}
#' as well as a unique identifier column labelled \code{gene}.
#'
#' @inheritParams glimmaMA.MArrayLM
#' @param table dataframe containing xlab and ylab columns for plotting.
#' @importFrom edgeR cpm
buildXYData <- function(
table,
status,
main,
display.columns,
anno,
counts,
xlab,
ylab,
status.colours,
groups,
transform.counts)
{
if (is.null(counts)) {
counts <- -1
} else {
# df format for serialisation
if (transform.counts) counts <- edgeR::cpm(counts, log=TRUE)
counts <- data.frame(counts)
if (is.null(groups)) stop("If counts arg is supplied, groups arg must be non-null.")
groups <- data.frame(group=groups)
groups <- cbind(groups, sample=colnames(counts))
}
if (length(status)!=nrow(table)) stop("Status vector
must have the same number of genes as the main arguments.")
table <- cbind(table, status=as.vector(status))
if (!is.null(anno)) table <- cbind(table, anno)
if (is.null(display.columns)) {
display.columns <- colnames(table)
} else {
# if it's specified, make sure at least x, y, gene are displayed in the table and tooltips
if (!(xlab %in% display.columns)) display.columns <- c(display.columns, xlab)
if (!(ylab %in% display.columns)) display.columns <- c(display.columns, ylab)
if (!("gene" %in% display.columns)) display.columns <- c("gene", display.columns)
}
table <- data.frame(index=0:(nrow(table)-1), table)
if (length(status.colours) != 3) stop("status_colours
arg must have exactly 3 elements for [downreg, notDE, upreg]")
xData <- list(data=list(x=xlab,
y=ylab,
table=table,
cols=display.columns,
counts=counts,
groups=groups,
expCols=colnames(groups),
statusColours=status.colours,
title=main))
return(xData)
}
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
glimmaMA(efit, dge=dge)
glimmaMA(efit, dge=dge[1:100,]) # error works
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
dge
efit
nrow(efit)
nrow(dge)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
dge$samples$group
dge$samples$group
levels(dge$samples$group) <- c("LP", "Basal", "ML")
dge$samples$group
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
levels(dge$samples$group) <- c("LP", "Basal", "ML")
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
levels(dge$samples$group) <- c("LP", "Basal", "ML")
glimmaMA(efit, dge=dge, html="testerMA2.html")
dge$samples$group
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dge$samples$group
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
source('D:/Windows/WEHI/Glimma/glimmav2testing/glimmatest.R', echo=TRUE)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(limma)
library(edgeR)
library(GlimmaV2)
library(DESeq2)
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
install.packages("D:/GitHub/GlimmaV2_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(GlimmaV2)
dge <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/dge.rds")
dds <- DESeqDataSetFromMatrix(
countData = dge$counts,
colData = dge$samples,
rowData = dge$genes,
design = ~group
)
setwd("D:/Windows/WEHI/Glimma/glimmav2testing")
## glimmaMA 2
design <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/design.rds")
contr.matrix <- readRDS("D:/GitHub/GlimmaV2/inst/RNAseq123/contr.matrix.rds")
v <- voom(dge, design)
vfit <- lmFit(v, design)
vfit <- contrasts.fit(vfit, contrasts = contr.matrix)
efit <- eBayes(vfit)
glimmaMA(efit, dge=dge, html="testerMA2.html")
dge
dge$samples
dge$samples$group
?edgeR::cpm
groups <- dge$samples$group
groups <- data.frame(group=groups)
groups
counts <- DESeq2::counts(efit)
counts <- dge$counts
groups <- cbind(groups, samples=colnames(counts))
groups
groups <- cbind(groups, levels(dge$samples$group))
groups
groups$`levels(dge$samples$group)`
groups <- data.frame(group=dge$samples$group)
gorups
groups
groups <- cbind(groups, sample=colnames(counts))
groups
dge
typeof(dge)
typeof(groups)
class(dge)
class(groups)
devtools::unload("GlimmaV2")
remove.packages("GlimmaV2")
